{"version":3,"sources":["logo.svg","Componen/Nav.js","Componen/generic.js","Componen/Loading.js","Componen/Dashboard.js","Componen/Image.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","SignOut","props","history","push","className","href","type","data-toggle","data-target","id","Component","styled","Article","list","prop","name","Loading","map","l","key","color","Dashboard","onChange","e","target","value","setState","handleChange","preventDefault","val","images","setTimeout","axios","get","state","apiUrl","apiKey","searchText","amount","then","res","data","hits","catch","err","console","log","ClickMore","window","localStorage","setItem","this","onSubmit","placeholder","IMAGES","INDEXS","style","width","marginLeft","marginBottom","marginTop","src","largeImageURL","height","alt","tags","Year","to","onClick","MoviesList","IMAGE_URL","Id","getItem","a","async","response","CurrentData","class","process","download","App","exact","path","component","Image","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a966200b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Nav.css'\n//import { withRouter } from \"react-router-dom\";\n\nexport class Nav extends Component {\n    SignOut=()=>{\n        this.props.history.push('/')\n    }\n    render() {\n        return (\n            <div className=\" Nav\">\n\n             <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n         <div className=\"container \"> \n                <a className=\"navbar-brand text-white ml-5 \"  href=\"#\">PixaBay Images</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-5 \">\n                    <li className=\"nav-item dropdown\">\n                        \n                    </li>\n                    </ul>\n                </div>\n        </div>    \n                </nav>\n   \n </div>\n        );\n    }\n}\n\nexport default  Nav;\n","import styled from \"tachyons-components\";\r\n\r\nexport const Section = styled('div')`\r\n//flex flex-wrap content-center justify-center w-100 h-100 bg-blue`;\r\n\r\nexport const Article = styled('div')`\r\n//w-25 ma2 h4 items-center justify-center flex flex-column flex-wrap`;\r\n\r\nexport const Prop = styled('h3')`\r\n//f5 f4-ns mb0 white`;\r\n\r\nexport const Title = styled('h1') `\r\n//f4 f3-ns white w-100 tc`;\r\n\r\nexport const list = [\r\n \r\n  {\r\n    prop: \"bars\",\r\n    name: \"Bars\"\r\n  }\r\n \r\n];\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport {  Article,  list } from \"./generic\";\r\n//import \"./styles.css\";\r\n\r\nconst Loading = () => (\r\n  <>\r\n   {list.map(l => (\r\n      <Article key={l.prop}>\r\n        <ReactLoading type={l.prop} color=\"black\" />\r\n       </Article>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default Loading ;\r\n","import React, { Component,useState } from 'react';\n//import Nav from './Nav';\nimport Spinner from './Loading';\nimport axios from 'axios'\nimport  './Dashboard.css'\nimport { Link } from \"react-router-dom\";\n\n\n\n \nexport class Dashboard extends Component {\n  constructor(props){\n    super(props)\n\n    this.state={\n      searchText:'',\n      amount: 16,\n      apiUrl: 'https://pixabay.com/api',\n      apiKey: '2141397-162a6e6ca9ba4b3fe3cff850d',\n      images: [],\n      Loading:false\n     \n    }\n   \n\n  }\n  onChange=(e)=>{\n const name=e.target.name;\n const value =e.target.value;\n this.setState({\n   [name]:value\n\n })  \n  }\n \n  handleChange = e => {\n    e.preventDefault();\n    const val = e.target.value;\n    this.setState({ [e.target.name]: val,Loading:true }, () => {\n      if (val === '') {\n        this.setState({ images: [] });\n      } else {\n        setTimeout(()=>{\n          axios\n          .get(\n            `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${\n              this.state.searchText\n            }&image_type=photo&per_page=${this.state.amount}&safesearch=true&largeImageURL=1280px`\n          )\n          .then(res => this.setState({ images: res.data.hits,Loading:false}))\n          .catch(err => console.log(err));\n        },2000)\n        \n         \n      }});\n      console.log(this.state)\n    \n  };\n   \n   ClickMore=(data)=>{\n    console.log(data);\n    window.localStorage.setItem('ID',data);\n     this.props.history.push('/MoviesList');\n    //console.log(idmkey);\n   } \n   \n  render() {\n const { images,Loading}= this.state;\n   \n    return (\n <div  className=\"body\">\n \n                \n             <div className=\"col 12 \">\n               \n               <h3 className=\"text-center text-black\">Search For Any Images</h3>\n              <form  onSubmit={this.handleChange}>\n              <input type=\"text\" \n                   className=\"form-control custom\"\n                    name=\"searchText\" \n                    value={this.state.searchText}\n                    onChange={this.onChange}\n                     placeholder=\"Search Images...\"/>\n        \n              </form>\n             </div>  \n      {Loading  ? <Spinner/>:<div className=\"containermt-5 sm \">\n            <div className=\"row\" >\n            \n            { images.map((IMAGES,INDEXS)=>{\n                return(\n                  <div key={INDEXS}className=\"card \" style={{width: '15rem',marginLeft:60,marginBottom:20,marginTop:10}}>\n                    <img src={IMAGES.largeImageURL}  style={{height: '15rem'}} className=\"card-img-top\"  alt=\"...\"/>\n                  <div className=\"card-body\">\n                <h5   style={{color: 'black'}}className=\"card-title\">{IMAGES.tags}</h5>\n                <p className=\"card-text\">{IMAGES.Year}</p>\n                    <Link to=\"\" onClick={()=>this.ClickMore(IMAGES.id)} className=\"btn btn-primary\">ADD CAPTION</Link>\n                  </div>\n               </div>\n        )\n        })}\n     \n    </div>\n  </div>}\n\n        )\n      \n    </div>\n    );\n  }\n}\n\nexport default Dashboard ;\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './singleImage.css';\nimport Spinner from './Loading';\nimport { Link } from \"react-router-dom\";\n\n\nexport class MoviesList extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n        IMAGE_URL:[],\n        apiUrl: 'https://pixabay.com/api',\n        apiKey: '15480709-df4fe32f11f123d9ebf38d469',\n        Id:window.localStorage.getItem('ID'),\n        Loading:false\n      }\n      //this.divRef = React.createRef();\n     }\n\n   \n  async componentDidMount(){\n     this.setState({Loading:true})\n     setTimeout( async()=>{\n          \n       let response = await axios.get( `${this.state.apiUrl}/?key=${this.state.apiKey}&id=${this.state.Id}&api &image_type=photo&per_page=&safesearch=true`)\n       console.log(response); \n       let CurrentData = response.data.hits[0].largeImageURL\n\n        this.setState({\n          IMAGE_URL:CurrentData,Loading:false\n        })\n      },1000)\n      \n     \n    }\n    \n    render() {\n      const {Loading}=this.state\n        return (\n            <div className=\"singleImage\">\n           <div class=\"container image\">\n        {Loading ? <Spinner/>:<img src={this.state.IMAGE_URL} />}\n        <button  class=\"btn btn-primary btn-lg btn-block edit\"> <Link to={process.env.PUBLIC_URL + this.state.IMAGE_URL}  style={{color:'white'}}download=\"image.jpg\">Download</Link>\n        \n        </button>\n\n       \n      \n         </div>\n                </div>\n\n        );\n    }\n}\n\nexport default MoviesList;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Nav from './Componen/Nav';\nimport Dashboard from './Componen/Dashboard'\nimport Image from './Componen/Image';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\n\n//import { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nfunction App(props) {\n  console.log(props)\n  return (\n    <div className=\"\">\n       \n   <Router>\n   <Nav/>\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={Dashboard}></Route>\n        <Route  path={process.env.PUBLIC_URL + \"/MoviesList\"} component={Image}></Route>\n\n   </Router>\n      \n     \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}